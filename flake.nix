{

  inputs = {
    nixpkgs.url = "github:nixos/nixpkgs/nixpkgs-unstable";
    flake-utils.url = "github:numtide/flake-utils";
  };

  outputs = { self, nixpkgs, flake-utils }: flake-utils.lib.eachDefaultSystem (system:
    let
      pkgs = import nixpkgs {
        inherit system;
        config.allowUnfree = true;
        config.android_sdk.accept_license = true;
      };

      android = {
        versions = {
          tools = "26.1.1";
          platformTools = "33.0.3";
          buildTools = "32.0.0";
          ndk = "25.1.8937393";
          cmake = "3.22.1";
          emulator = "32.1.8";
        };

        platforms = [ "30" "32" ];
        abis = [ "armeabi-v7a" "arm64-v8a" ];
      };

      androidComposition = pkgs.androidenv.composeAndroidPackages {
        toolsVersion = android.versions.tools;
        platformToolsVersion = android.versions.platformTools;
        buildToolsVersions = [ android.versions.buildTools ];
        platformVersions = android.platforms;
        abiVersions = android.abis;

        includeSources = true;
        includeSystemImages = true;
        systemImageTypes = [ "google_apis_playstore" ];

        includeNDK = true;
        ndkVersions = [ android.versions.ndk ];
        cmakeVersions = [ android.versions.cmake ];

        includeEmulator = true;
        emulatorVersion = android.versions.emulator;
      };

      jdk = pkgs.jdk17;
      androidSdk = androidComposition.androidsdk;
      androidPlatformTools = androidComposition.platform-tools;

    in
    {

      devShells.default = pkgs.mkShell rec {
        packages = with pkgs; [
          androidPlatformTools
          androidSdk
          glibc
          jdk
        ];

        JAVA_HOME = jdk.home;

        ANDROID_HOME = ANDROID_SDK_ROOT;
        ANDROID_SDK_ROOT = "${androidSdk}/libexec/android-sdk";
        ANDROID_NDK_ROOT = "${ANDROID_SDK_ROOT}/ndk-bundle";

        GRADLE_OPTS = "-Dorg.gradle.project.android.aapt2FromMavenOverride=${ANDROID_SDK_ROOT}/build-tools/${android.versions.buildTools}/aapt2";

        shellHook = ''
          cmake_root="$(echo "$ANDROID_SDK_ROOT/cmake/${android.versions.cmake}"*/)"
          export PATH="$cmake_root/bin:$PATH"

          echo "# This file was automatically generated by nix-shell." > local.properties
          echo "sdk.dir=$ANDROID_SDK_ROOT" >> local.properties
          echo "ndk.dir=$ANDROID_NDK_ROOT" >> local.properties
          echo "cmake.dir=$cmake_root" >> local.properties
        '';
      };

    }
  );

}
